{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seanm\\\\Desktop\\\\hackmit\\\\src\\\\components\\\\GameMain.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../App.css';\nimport TakeAnswer from './TakeAnswer';\nimport RespondAnswer from './RespondAnswer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameMain({\n  moveNext,\n  grade,\n  number\n}) {\n  _s();\n  const [dict, setDict] = useState({});\n  async function CallOpenAIAPI() {\n    const content = `${number} math questions for a ${grade}th grader. Give a single numeric answer to each question. \\\n      Return each question with its corresponding answer. Label each question with 'Question 1', 'Question 2', and so on. \\\n      The answers should each be a single numeric value without units.`;\n    const APIBody = {\n      \"model\": \"gpt-3.5-turbo\",\n      \"messages\": [{\n        role: 'system',\n        content: content\n      }],\n      \"temperature\": 0,\n      \"max_tokens\": 256\n    };\n    await fetch(\"https://api.openai.com/v1/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer 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\"\n      },\n      body: JSON.stringify(APIBody)\n    }).then(completion => {\n      console.log(completion);\n      const reply_content = completion.choices[0].message.content;\n      const question_and_answer = reply_content.split(\"\\n\");\n      let on_question = true;\n      const questions = [];\n      const answers = [];\n      for (const element of question_and_answer) {\n        if (!element || ![\"Q\", \"A\"].includes(element[0])) {\n          continue;\n        }\n        const colon_index = element.indexOf(\":\");\n        const trimmed_element = element.slice(colon_index + 1).trim();\n        if (on_question) {\n          questions.push(trimmed_element);\n          on_question = false;\n        } else {\n          answers.push(trimmed_element);\n          on_question = true;\n        }\n      }\n      const dict = {};\n      for (let i = 0; i < questions.length; i++) {\n        dict[i] = [questions[i], answers[i]];\n      }\n      setDict(dict);\n    });\n  }\n  useEffect(() => {\n    CallOpenAIAPI();\n  }, []);\n  const maxNumberWrong = Math.max(Math.round(0.25 * Object.keys(dict).length) - 1, 0);\n  const [numWrong, setNumWrong] = useState(0);\n  const [idx, setIdx] = useState(0);\n  const [correct, setCorrect] = useState(true);\n  const [won, setWon] = useState(false);\n  const [died, setDied] = useState(false);\n  const [submitOpen, setSubmitOpen] = useState(true);\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleInputKeyDown = event => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n  const handleSubmit = () => {\n    onSubmit(inputValue);\n    setInputValue('');\n  };\n  const onSubmit = () => {\n    if (inputValue == dict[idx][1]) {\n      setCorrect(true);\n    } else {\n      setCorrect(false);\n      setNumWrong(numWrong + 1);\n      if (numWrong >= maxNumberWrong) {\n        console.log(\"setting died\");\n        setDied(true);\n      }\n    }\n    if (idx == Object.keys(dict).length - 1) {\n      setWon(true);\n    }\n    setSubmitOpen(false);\n    setTimeout(() => {\n      setSubmitOpen(true);\n      setIdx(idx + 1);\n    }, 1000);\n  };\n  if (Object.keys(dict).length === 0) {\n    // If dict is still empty, display loading or fetching data message\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this);\n  }\n  if (died) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"your car tragically exploded due to tomfoolery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: moveNext,\n          children: \"Play Again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this);\n  }\n  if (won != true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"special-font\",\n          children: [\"Question: \", dict[idx][0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), submitOpen ? /*#__PURE__*/_jsxDEV(TakeAnswer, {\n          inputValue: inputValue,\n          handleSubmit: handleSubmit,\n          handleInputChange: handleInputChange,\n          handleInputKeyDown: handleInputKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(RespondAnswer, {\n          quality: correct\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Congrats! You won with score \", Object.keys(dict).length - numWrong, \" / \", Object.keys(dict).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: moveNext,\n          children: \"Play Again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this);\n  }\n}\n_s(GameMain, \"gdnS5FmjqZG7VvzG7Sc077ARc2M=\");\n_c = GameMain;\nexport default GameMain;\nvar _c;\n$RefreshReg$(_c, \"GameMain\");","map":{"version":3,"names":["useState","useEffect","TakeAnswer","RespondAnswer","jsxDEV","_jsxDEV","GameMain","moveNext","grade","number","_s","dict","setDict","CallOpenAIAPI","content","APIBody","role","fetch","method","headers","body","JSON","stringify","then","completion","console","log","reply_content","choices","message","question_and_answer","split","on_question","questions","answers","element","includes","colon_index","indexOf","trimmed_element","slice","trim","push","i","length","maxNumberWrong","Math","max","round","Object","keys","numWrong","setNumWrong","idx","setIdx","correct","setCorrect","won","setWon","died","setDied","submitOpen","setSubmitOpen","inputValue","setInputValue","handleInputChange","event","target","value","handleInputKeyDown","key","handleSubmit","onSubmit","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","quality","_c","$RefreshReg$"],"sources":["C:/Users/seanm/Desktop/hackmit/src/components/GameMain.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport TakeAnswer from './TakeAnswer';\r\nimport RespondAnswer from './RespondAnswer';\r\n\r\nfunction GameMain({moveNext, grade, number}) {\r\n\r\n    const [dict, setDict] = useState({})\r\n\r\n    async function CallOpenAIAPI() {\r\n\r\n      const content = `${number} math questions for a ${grade}th grader. Give a single numeric answer to each question. \\\r\n      Return each question with its corresponding answer. Label each question with 'Question 1', 'Question 2', and so on. \\\r\n      The answers should each be a single numeric value without units.`;\r\n\r\n      const APIBody ={\r\n      \"model\": \"gpt-3.5-turbo\",\r\n      \"messages\": [{ role: 'system', content: content }],\r\n      \"temperature\": 0,\r\n      \"max_tokens\": 256}\r\n\r\n      await fetch(\"https://api.openai.com/v1/completions\",{\r\n      method: \"POST\",\r\n      headers: {\"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer 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\"},\r\n      body: JSON.stringify(APIBody)\r\n    }).then((completion) => {\r\n      console.log(completion)\r\n      const reply_content = completion.choices[0].message.content;\r\n\r\n      const question_and_answer = reply_content.split(\"\\n\");\r\n      let on_question = true;\r\n      const questions = [];\r\n      const answers = [];\r\n\r\n      for (const element of question_and_answer) {\r\n      if (!element || ![\"Q\", \"A\"].includes(element[0])) {\r\n          continue;\r\n      }\r\n      const colon_index = element.indexOf(\":\");\r\n      const trimmed_element = element.slice(colon_index + 1).trim();\r\n      if (on_question) {\r\n          questions.push(trimmed_element);\r\n          on_question = false;\r\n      } else {\r\n          answers.push(trimmed_element);\r\n          on_question = true;\r\n      }\r\n      }\r\n\r\n      const dict = {};\r\n\r\n      for (let i = 0; i < questions.length; i++) {\r\n      dict[i] = [questions[i],answers[i]];\r\n      }\r\n      setDict(dict);\r\n    });\r\n  }\r\n\r\n    useEffect(() => {\r\n      CallOpenAIAPI();\r\n    }, []);\r\n    \r\n    const maxNumberWrong = Math.max(Math.round(0.25*Object.keys(dict).length)-1,0);\r\n    const [numWrong, setNumWrong] = useState(0);\r\n  \r\n    const [idx, setIdx] = useState(0);\r\n  \r\n    const [correct,setCorrect] = useState(true);\r\n  \r\n    const [won,setWon] = useState(false);\r\n  \r\n    const [died, setDied] = useState(false);\r\n\r\n    const [submitOpen, setSubmitOpen] = useState(true);\r\n  \r\n    const [inputValue,setInputValue] = useState(\"\");\r\n  \r\n    const handleInputChange = (event) => {\r\n      setInputValue(event.target.value);\r\n    };\r\n\r\n    const handleInputKeyDown = (event) => {\r\n      if (event.key === 'Enter') {\r\n        handleSubmit();\r\n      }\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n      onSubmit(inputValue);\r\n      setInputValue('');\r\n    };\r\n  \r\n    const onSubmit = () => {\r\n      if (inputValue==dict[idx][1]) {\r\n        setCorrect(true);\r\n      }\r\n      else {\r\n        setCorrect(false);\r\n        setNumWrong(numWrong+1);\r\n        if (numWrong >= maxNumberWrong) {\r\n          console.log(\"setting died\")\r\n          setDied(true);\r\n        }\r\n      }\r\n      \r\n      if (idx==Object.keys(dict).length-1){\r\n        setWon(true);\r\n      }\r\n      \r\n      setSubmitOpen(false);\r\n      setTimeout(() => {\r\n        setSubmitOpen(true);\r\n        setIdx(idx+1);\r\n      }, 1000);\r\n    }\r\n\r\n    if (Object.keys(dict).length === 0) {\r\n      // If dict is still empty, display loading or fetching data message\r\n      return (\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <p>Loading...</p>\r\n          </header>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    if(died) {\r\n      return(\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <p>\r\n              your car tragically exploded due to tomfoolery\r\n            </p>\r\n            <button className=\"btn\" onClick={moveNext}>Play Again!</button>\r\n          </header>\r\n        </div>\r\n      );\r\n  \r\n    }\r\n    if (won!=true) {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <p className=\"special-font\">\r\n            Question: {dict[idx][0]}\r\n          </p>\r\n          {submitOpen ? \r\n          <TakeAnswer inputValue={inputValue} handleSubmit={handleSubmit} handleInputChange={handleInputChange} handleInputKeyDown={handleInputKeyDown}/> : \r\n          <RespondAnswer quality = {correct}/>}\r\n        </header>\r\n      </div>\r\n    );}\r\n    else{\r\n      return(\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <p>\r\n              Congrats! You won with score {Object.keys(dict).length - numWrong} / {Object.keys(dict).length}\r\n            </p>\r\n            <button className=\"btn\" onClick={moveNext}>Play Again!</button>\r\n          </header>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default GameMain;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}