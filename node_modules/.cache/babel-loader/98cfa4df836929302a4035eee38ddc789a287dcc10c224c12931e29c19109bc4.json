{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seanm\\\\Desktop\\\\hackmit\\\\src\\\\components\\\\GameMain.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../App.css';\nimport TakeAnswer from './TakeAnswer';\nimport RespondAnswer from './RespondAnswer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameMain({\n  moveNext,\n  grade,\n  number\n}) {\n  _s();\n  const [dict, setDict] = useState({\n    1: [\"question\", \"answer\"],\n    2: [\"question\", \"answer\"]\n  });\n  async function CallOpenAIAPI() {\n    const content = `${number} math questions for a ${grade}th grader. Give a single numeric answer to each question. \\\n        Return each question with its corresponding answer. Label each question with 'Question 1', 'Question 2', and so on. \\\n        The answers should each be a single numeric value without units.`;\n    const APIBody = {\n      \"model\": \"gpt-3.5-turbo\",\n      \"messages\": [{\n        role: 'system',\n        content: content\n      }],\n      \"temperature\": 0,\n      \"max_tokens\": 256\n    };\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/completions\", {\n        //method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer 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\"\n        },\n        body: JSON.stringify(APIBody)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const completion = await response.json();\n      console.log(\"API Response:\", completion);\n      const reply_content = completion.choices[0].message.content;\n      const question_and_answer = reply_content.split(\"\\n\");\n      let on_question = true;\n      const questions = [];\n      const answers = [];\n      for (const element of question_and_answer) {\n        if (!element || ![\"Q\", \"A\"].includes(element[0])) {\n          continue;\n        }\n        const colon_index = element.indexOf(\":\");\n        const trimmed_element = element.slice(colon_index + 1).trim();\n        if (on_question) {\n          questions.push(trimmed_element);\n          on_question = false;\n        } else {\n          answers.push(trimmed_element);\n          on_question = true;\n        }\n      }\n      const dict = {};\n      for (let i = 0; i < questions.length; i++) {\n        dict[i] = [questions[i], answers[i]];\n      }\n      setDict(dict);\n    } catch (error) {\n      console.error(\"API Error:\", error);\n    }\n    ;\n  }\n  useEffect(() => {\n    CallOpenAIAPI();\n  }, []);\n  const maxNumberWrong = Math.max(Math.round(0.25 * Object.keys(dict).length) - 1, 0);\n  const [numWrong, setNumWrong] = useState(0);\n  const [idx, setIdx] = useState(0);\n  const [correct, setCorrect] = useState(true);\n  const [won, setWon] = useState(false);\n  const [died, setDied] = useState(false);\n  const [submitOpen, setSubmitOpen] = useState(true);\n  const currentQuestion = dict[idx] ? dict[idx][0] : '';\n  const currentAnswer = dict[idx] ? dict[idx][1] : '';\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleInputKeyDown = event => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n  const handleSubmit = () => {\n    onSubmit(inputValue);\n    setInputValue('');\n  };\n  const onSubmit = () => {\n    if (inputValue == currentAnswer) {\n      setCorrect(true);\n    } else {\n      setCorrect(false);\n      setNumWrong(numWrong + 1);\n      if (numWrong >= maxNumberWrong) {\n        console.log(\"setting died\");\n        setDied(true);\n      }\n    }\n    if (idx == Object.keys(dict).length - 1) {\n      setWon(true);\n    }\n    setSubmitOpen(false);\n    setTimeout(() => {\n      setSubmitOpen(true);\n      setIdx(idx + 1);\n    }, 1000);\n  };\n  if (Object.keys(dict).length === 0) {\n    // If dict is still empty, display loading or fetching data message\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this);\n  }\n  if (died) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"your car tragically exploded due to tomfoolery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: moveNext,\n          children: \"Play Again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this);\n  }\n  if (won != true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"special-font\",\n          children: [\"Question: \", currentQuestion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), submitOpen ? /*#__PURE__*/_jsxDEV(TakeAnswer, {\n          inputValue: inputValue,\n          handleSubmit: handleSubmit,\n          handleInputChange: handleInputChange,\n          handleInputKeyDown: handleInputKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(RespondAnswer, {\n          quality: correct\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Congrats! You won with score \", Object.keys(dict).length - numWrong, \" / \", Object.keys(dict).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: moveNext,\n          children: \"Play Again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this);\n  }\n}\n_s(GameMain, \"AXVNjMQtX7oX4O/I1vVgh9xrP1o=\");\n_c = GameMain;\nexport default GameMain;\nvar _c;\n$RefreshReg$(_c, \"GameMain\");","map":{"version":3,"names":["useState","useEffect","TakeAnswer","RespondAnswer","jsxDEV","_jsxDEV","GameMain","moveNext","grade","number","_s","dict","setDict","CallOpenAIAPI","content","APIBody","role","response","fetch","headers","body","JSON","stringify","ok","Error","status","completion","json","console","log","reply_content","choices","message","question_and_answer","split","on_question","questions","answers","element","includes","colon_index","indexOf","trimmed_element","slice","trim","push","i","length","error","maxNumberWrong","Math","max","round","Object","keys","numWrong","setNumWrong","idx","setIdx","correct","setCorrect","won","setWon","died","setDied","submitOpen","setSubmitOpen","currentQuestion","currentAnswer","inputValue","setInputValue","handleInputChange","event","target","value","handleInputKeyDown","key","handleSubmit","onSubmit","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","quality","_c","$RefreshReg$"],"sources":["C:/Users/seanm/Desktop/hackmit/src/components/GameMain.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport TakeAnswer from './TakeAnswer';\r\nimport RespondAnswer from './RespondAnswer';\r\n\r\nfunction GameMain({moveNext, grade, number}) {\r\n\r\n    const [dict, setDict] = useState({1:[\"question\",\"answer\"],2:[\"question\",\"answer\"]})\r\n\r\n    async function CallOpenAIAPI() {\r\n      const content = `${number} math questions for a ${grade}th grader. Give a single numeric answer to each question. \\\r\n        Return each question with its corresponding answer. Label each question with 'Question 1', 'Question 2', and so on. \\\r\n        The answers should each be a single numeric value without units.`;\r\n    \r\n      const APIBody = {\r\n        \"model\": \"gpt-3.5-turbo\",\r\n        \"messages\": [{ role: 'system', content: content }],\r\n        \"temperature\": 0,\r\n        \"max_tokens\": 256\r\n      };\r\n    \r\n      try {\r\n        const response = await fetch(\"https://api.openai.com/v1/completions\", {\r\n          //method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": \"Bearer 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\"\r\n          },\r\n          body: JSON.stringify(APIBody)\r\n        });\r\n    \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n    \r\n        const completion = await response.json();\r\n        console.log(\"API Response:\", completion);\r\n      const reply_content = completion.choices[0].message.content;\r\n\r\n      const question_and_answer = reply_content.split(\"\\n\");\r\n      let on_question = true;\r\n      const questions = [];\r\n      const answers = [];\r\n\r\n      for (const element of question_and_answer) {\r\n      if (!element || ![\"Q\", \"A\"].includes(element[0])) {\r\n          continue;\r\n      }\r\n      const colon_index = element.indexOf(\":\");\r\n      const trimmed_element = element.slice(colon_index + 1).trim();\r\n      if (on_question) {\r\n          questions.push(trimmed_element);\r\n          on_question = false;\r\n      } else {\r\n          answers.push(trimmed_element);\r\n          on_question = true;\r\n      }\r\n      }\r\n\r\n      const dict = {};\r\n\r\n      for (let i = 0; i < questions.length; i++) {\r\n      dict[i] = [questions[i],answers[i]];\r\n      }\r\n      setDict(dict);\r\n    } catch (error) {\r\n      console.error(\"API Error:\", error);\r\n    };\r\n  }\r\n\r\n    useEffect(() => {\r\n      CallOpenAIAPI();\r\n    }, []);\r\n    \r\n    const maxNumberWrong = Math.max(Math.round(0.25*Object.keys(dict).length)-1,0);\r\n    const [numWrong, setNumWrong] = useState(0);\r\n  \r\n    const [idx, setIdx] = useState(0);\r\n  \r\n    const [correct,setCorrect] = useState(true);\r\n  \r\n    const [won,setWon] = useState(false);\r\n  \r\n    const [died, setDied] = useState(false);\r\n\r\n    const [submitOpen, setSubmitOpen] = useState(true);\r\n\r\n    const currentQuestion = dict[idx] ? dict[idx][0] : '';\r\n    const currentAnswer = dict[idx] ? dict[idx][1] : '';\r\n\r\n    const [inputValue,setInputValue] = useState(\"\");\r\n  \r\n    const handleInputChange = (event) => {\r\n      setInputValue(event.target.value);\r\n    };\r\n\r\n    const handleInputKeyDown = (event) => {\r\n      if (event.key === 'Enter') {\r\n        handleSubmit();\r\n      }\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n      onSubmit(inputValue);\r\n      setInputValue('');\r\n    };\r\n  \r\n    const onSubmit = () => {\r\n      if (inputValue==currentAnswer) {\r\n        setCorrect(true);\r\n      }\r\n      else {\r\n        setCorrect(false);\r\n        setNumWrong(numWrong+1);\r\n        if (numWrong >= maxNumberWrong) {\r\n          console.log(\"setting died\")\r\n          setDied(true);\r\n        }\r\n      }\r\n      \r\n      if (idx==Object.keys(dict).length-1){\r\n        setWon(true);\r\n      }\r\n      \r\n      setSubmitOpen(false);\r\n      setTimeout(() => {\r\n        setSubmitOpen(true);\r\n        setIdx(idx+1);\r\n      }, 1000);\r\n    }\r\n\r\n    if (Object.keys(dict).length === 0) {\r\n      // If dict is still empty, display loading or fetching data message\r\n      return (\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <p>Loading...</p>\r\n          </header>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    if(died) {\r\n      return(\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <p>\r\n              your car tragically exploded due to tomfoolery\r\n            </p>\r\n            <button className=\"btn\" onClick={moveNext}>Play Again!</button>\r\n          </header>\r\n        </div>\r\n      );\r\n  \r\n    }\r\n    if (won!=true) {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <p className=\"special-font\">\r\n            Question: {currentQuestion}\r\n          </p>\r\n          {submitOpen ? \r\n          <TakeAnswer inputValue={inputValue} handleSubmit={handleSubmit} handleInputChange={handleInputChange} handleInputKeyDown={handleInputKeyDown}/> : \r\n          <RespondAnswer quality = {correct}/>}\r\n        </header>\r\n      </div>\r\n    );}\r\n    else{\r\n      return(\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <p>\r\n              Congrats! You won with score {Object.keys(dict).length - numWrong} / {Object.keys(dict).length}\r\n            </p>\r\n            <button className=\"btn\" onClick={moveNext}>Play Again!</button>\r\n          </header>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default GameMain;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}