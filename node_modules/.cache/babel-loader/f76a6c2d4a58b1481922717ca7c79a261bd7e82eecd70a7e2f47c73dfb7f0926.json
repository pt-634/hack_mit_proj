{"ast":null,"code":"'use strict';\n\n// File generated from our OpenAPI spec by Stainless.\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.InternalServerError = exports.RateLimitError = exports.UnprocessableEntityError = exports.ConflictError = exports.NotFoundError = exports.PermissionDeniedError = exports.AuthenticationError = exports.BadRequestError = exports.APIConnectionTimeoutError = exports.APIConnectionError = exports.APIUserAbortError = exports.APIError = void 0;\nconst core_1 = require('./core.js');\nclass APIError extends Error {\n  constructor(status, error, message, headers) {\n    super(APIError.makeMessage(error, message));\n    this.status = status;\n    this.headers = headers;\n    const data = error;\n    this.error = data;\n    this.code = data === null || data === void 0 ? void 0 : data['code'];\n    this.param = data === null || data === void 0 ? void 0 : data['param'];\n    this.type = data === null || data === void 0 ? void 0 : data['type'];\n  }\n  static makeMessage(error, message) {\n    return (error === null || error === void 0 ? void 0 : error.message) ? typeof error.message === 'string' ? error.message : JSON.stringify(error.message) : error ? JSON.stringify(error) : message || 'Unknown error occurred';\n  }\n  static generate(status, errorResponse, message, headers) {\n    if (!status) {\n      return new APIConnectionError({\n        cause: (0, core_1.castToError)(errorResponse)\n      });\n    }\n    const error = errorResponse === null || errorResponse === void 0 ? void 0 : errorResponse['error'];\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n    return new APIError(status, error, message, headers);\n  }\n}\nexports.APIError = APIError;\nclass APIUserAbortError extends APIError {\n  constructor({\n    message\n  } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n    this.status = undefined;\n  }\n}\nexports.APIUserAbortError = APIUserAbortError;\nclass APIConnectionError extends APIError {\n  constructor({\n    message,\n    cause\n  }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    this.status = undefined;\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\nexports.APIConnectionError = APIConnectionError;\nclass APIConnectionTimeoutError extends APIConnectionError {\n  constructor() {\n    super({\n      message: 'Request timed out.'\n    });\n  }\n}\nexports.APIConnectionTimeoutError = APIConnectionTimeoutError;\nclass BadRequestError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 400;\n  }\n}\nexports.BadRequestError = BadRequestError;\nclass AuthenticationError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 401;\n  }\n}\nexports.AuthenticationError = AuthenticationError;\nclass PermissionDeniedError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 403;\n  }\n}\nexports.PermissionDeniedError = PermissionDeniedError;\nclass NotFoundError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 404;\n  }\n}\nexports.NotFoundError = NotFoundError;\nclass ConflictError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 409;\n  }\n}\nexports.ConflictError = ConflictError;\nclass UnprocessableEntityError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 422;\n  }\n}\nexports.UnprocessableEntityError = UnprocessableEntityError;\nclass RateLimitError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 429;\n  }\n}\nexports.RateLimitError = RateLimitError;\nclass InternalServerError extends APIError {}\nexports.InternalServerError = InternalServerError;","map":{"version":3,"names":["exports","RateLimitError","UnprocessableEntityError","ConflictError","NotFoundError","PermissionDeniedError","AuthenticationError","BadRequestError","APIConnectionTimeoutError","APIConnectionError","APIUserAbortError","APIError","core_1","require","Error","constructor","status","error","message","headers","makeMessage","data","code","type","JSON","stringify","generate","errorResponse","cause","castToError","InternalServerError","undefined","arguments"],"sources":["C:\\Users\\seanm\\Desktop\\hackmit\\node_modules\\openai\\src\\error.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless.\n\nimport { castToError, Headers } from './core';\n\nexport class APIError extends Error {\n  readonly status: number | undefined;\n  readonly headers: Headers | undefined;\n  readonly error: Object | undefined;\n\n  readonly code: string | null | undefined;\n  readonly param: string | null | undefined;\n  readonly type: string | undefined;\n\n  constructor(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ) {\n    super(APIError.makeMessage(error, message));\n    this.status = status;\n    this.headers = headers;\n\n    const data = error as Record<string, any>;\n    this.error = data;\n    this.code = data?.['code'];\n    this.param = data?.['param'];\n    this.type = data?.['type'];\n  }\n\n  private static makeMessage(error: any, message: string | undefined) {\n    return (\n      error?.message ?\n        typeof error.message === 'string' ? error.message\n        : JSON.stringify(error.message)\n      : error ? JSON.stringify(error)\n      : message || 'Unknown error occurred'\n    );\n  }\n\n  static generate(\n    status: number | undefined,\n    errorResponse: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ) {\n    if (!status) {\n      return new APIConnectionError({ cause: castToError(errorResponse) });\n    }\n\n    const error = (errorResponse as Record<string, any>)?.['error'];\n\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n\n    return new APIError(status, error, message, headers);\n  }\n}\n\nexport class APIUserAbortError extends APIError {\n  override readonly status: undefined = undefined;\n\n  constructor({ message }: { message?: string } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\n\nexport class APIConnectionError extends APIError {\n  override readonly status: undefined = undefined;\n\n  constructor({ message, cause }: { message?: string; cause?: Error | undefined }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\n\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor() {\n    super({ message: 'Request timed out.' });\n  }\n}\n\nexport class BadRequestError extends APIError {\n  override readonly status: 400 = 400;\n}\n\nexport class AuthenticationError extends APIError {\n  override readonly status: 401 = 401;\n}\n\nexport class PermissionDeniedError extends APIError {\n  override readonly status: 403 = 403;\n}\n\nexport class NotFoundError extends APIError {\n  override readonly status: 404 = 404;\n}\n\nexport class ConflictError extends APIError {\n  override readonly status: 409 = 409;\n}\n\nexport class UnprocessableEntityError extends APIError {\n  override readonly status: 422 = 422;\n}\n\nexport class RateLimitError extends APIError {\n  override readonly status: 429 = 429;\n}\n\nexport class InternalServerError extends APIError {}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}